{"remainingRequest":"D:\\PTUD_Web\\PhamGiaHung_B2111845_CT44901_BaiTapLon\\CTT449-BaiTapLon\\front-end\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\PTUD_Web\\PhamGiaHung_B2111845_CT44901_BaiTapLon\\CTT449-BaiTapLon\\front-end\\src\\components\\books\\BookList.vue?vue&type=style&index=0&id=d0539dc8&scoped=true&lang=css","dependencies":[{"path":"D:\\PTUD_Web\\PhamGiaHung_B2111845_CT44901_BaiTapLon\\CTT449-BaiTapLon\\front-end\\src\\components\\books\\BookList.vue","mtime":1742724685983},{"path":"D:\\PTUD_Web\\PhamGiaHung_B2111845_CT44901_BaiTapLon\\CTT449-BaiTapLon\\front-end\\node_modules\\css-loader\\dist\\cjs.js","mtime":1742719098641},{"path":"D:\\PTUD_Web\\PhamGiaHung_B2111845_CT44901_BaiTapLon\\CTT449-BaiTapLon\\front-end\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":1742719099346},{"path":"D:\\PTUD_Web\\PhamGiaHung_B2111845_CT44901_BaiTapLon\\CTT449-BaiTapLon\\front-end\\node_modules\\postcss-loader\\src\\index.js","mtime":1742719099030},{"path":"D:\\PTUD_Web\\PhamGiaHung_B2111845_CT44901_BaiTapLon\\CTT449-BaiTapLon\\front-end\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1742719098262},{"path":"D:\\PTUD_Web\\PhamGiaHung_B2111845_CT44901_BaiTapLon\\CTT449-BaiTapLon\\front-end\\node_modules\\vue-loader\\lib\\index.js","mtime":1742719098071}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:DQoudGFibGUtcmVzcG9uc2l2ZSB7DQogICAgb3ZlcmZsb3cteDogYXV0bzsNCn0NCg=="},{"version":3,"sources":["BookList.vue"],"names":[],"mappings":";AAiMA;AACA;AACA","file":"BookList.vue","sourceRoot":"src/components/books","sourcesContent":["<template>\r\n    <b-container>\r\n        <h2>Danh s√°ch s√°ch</h2>\r\n        <b-table :items=\"books\" :fields=\"fields\" striped hover>\r\n            <!-- Template cho c·ªôt HinhAnh -->\r\n            <template #cell(HinhAnh)=\"data\">\r\n                <img v-if=\"data.value\" :src=\"formatImageUrl(data.value)\" alt=\"Book cover\" style=\"max-height: 50px;\" />\r\n            </template>\r\n            \r\n            <!-- Template cho c·ªôt actions -->\r\n            <template #cell(actions)=\"row\">\r\n                <div v-if=\"isAdmin\">\r\n                    <b-button size=\"sm\" variant=\"warning\" class=\"mr-1\" @click=\"editBook(row.item)\">S·ª≠a</b-button>\r\n                    <b-button size=\"sm\" variant=\"danger\" @click=\"deleteBook(row.item)\">Xo√°</b-button>\r\n                </div>\r\n            </template>\r\n        </b-table>\r\n    </b-container>\r\n</template>\r\n\r\n<script>\r\nimport api from '@/api';\r\nimport authService from '@/services/auth.service';\r\n\r\nexport default {\r\n    data() {\r\n        return {\r\n            books: [],\r\n            fields: [\r\n                { key: 'MaSach', label: 'M√£ s√°ch' },\r\n                { key: 'TenSach', label: 'T√™n s√°ch' },\r\n                { key: 'TacGia', label: 'T√°c gi·∫£' },\r\n                { key: 'HinhAnh', label: 'H√¨nh ·∫£nh' },\r\n                { key: 'actions', label: 'H√†nh ƒë·ªông' }\r\n            ],\r\n            isAdmin: false\r\n        };\r\n    },\r\n    async created() {\r\n        await this.loadBooks();\r\n        this.checkAdminRole();\r\n    },\r\n    methods: {\r\n        checkAdminRole() {\r\n            const user = authService.getCurrentUser();\r\n            this.isAdmin = user && user.chucvu === 'admin';\r\n            console.log('Current user role:', user && user.chucvu);\r\n            console.log('Is admin:', this.isAdmin);\r\n        },\r\n        \r\n        async loadBooks() {\r\n            try {\r\n                const res = await api.get('/sach');\r\n                this.books = res.data;\r\n                console.log('Books loaded:', this.books.length);\r\n            } catch (err) {\r\n                console.error('Error loading books:', err);\r\n                this.$bvToast.toast('Kh√¥ng t·∫£i ƒë∆∞·ª£c danh s√°ch s√°ch', {\r\n                    title: 'L·ªói',\r\n                    variant: 'danger',\r\n                    solid: true\r\n                });\r\n            }\r\n        },\r\n        \r\n        formatImageUrl(imageUrl) {\r\n            if (!imageUrl) return '';\r\n            \r\n            if (imageUrl.startsWith('http')) {\r\n                return imageUrl;\r\n            } else {\r\n                return `http://localhost:3000${imageUrl}`;\r\n            }\r\n        },\r\n        \r\n        editBook(book) {\r\n            this.$router.push(`/edit-book/${book.MaSach}`);\r\n        },\r\n        \r\n        async deleteBook(book) {\r\n            // Log the book object completely to debug\r\n            console.log(\"Book object for deletion:\", book);\r\n            \r\n            if (!confirm(`B·∫°n c√≥ ch·∫Øc mu·ªën xo√° s√°ch \"${book.TenSach}\" (M√£: ${book.MaSach})?`)) return;\r\n            \r\n            // Validate book.MaSach exists and is not empty\r\n            if (!book.MaSach) {\r\n                console.error(\"MaSach field is missing\");\r\n                this.$bvToast.toast('Kh√¥ng th·ªÉ xo√° s√°ch: M√£ s√°ch kh√¥ng t·ªìn t·∫°i', {\r\n                    title: 'L·ªói d·ªØ li·ªáu',\r\n                    variant: 'danger',\r\n                    solid: true\r\n                });\r\n                return;\r\n            }\r\n            \r\n            // Enhanced validation for MaSach\r\n            const originalMaSach = book.MaSach;\r\n            const bookId = typeof originalMaSach === 'string' ? originalMaSach.trim() : String(originalMaSach).trim();\r\n            \r\n            // Check for whitespace or case differences\r\n            if (originalMaSach !== bookId) {\r\n                console.warn(`‚ö†Ô∏è MaSach contains whitespace. Original: \"${originalMaSach}\", Cleaned: \"${bookId}\"`);\r\n            }\r\n            \r\n            console.log(`üîç MaSach validation checks:`);\r\n            console.log(`  - Original value: \"${originalMaSach}\"`);\r\n            console.log(`  - Trimmed value: \"${bookId}\"`);\r\n            console.log(`  - Character codes: [${Array.from(bookId).map(c => c.charCodeAt(0))}]`);\r\n            \r\n            try {\r\n                // Make sure we're using the correct URL format with the book ID\r\n                const deleteUrl = `/sach/${bookId}`;\r\n                console.log(`üì§ Sending DELETE request to: ${api.defaults.baseURL}${deleteUrl}`);\r\n                \r\n                const response = await api.delete(deleteUrl);\r\n                console.log(\"Delete response:\", response.data);\r\n                \r\n                this.$bvToast.toast('Xo√° s√°ch th√†nh c√¥ng', {\r\n                    title: 'Th√†nh c√¥ng',\r\n                    variant: 'success',\r\n                    solid: true\r\n                });\r\n                \r\n                // Reload book list\r\n                await this.loadBooks();\r\n            } catch (err) {\r\n                // ...existing error handling code...\r\n                \r\n                // Add more detailed 404 error information\r\n                if (err.response && err.response.status === 404) {\r\n                    console.error('Book not found in database with ID:', book.MaSach);\r\n                    console.log('Book object being deleted:', book);\r\n                    \r\n                    this.$bvToast.toast(`Kh√¥ng t√¨m th·∫•y s√°ch v·ªõi m√£ \"${book.MaSach}\" trong c∆° s·ªü d·ªØ li·ªáu. Vui l√≤ng l√†m m·ªõi trang v√† th·ª≠ l·∫°i.`, {\r\n                        title: 'L·ªói kh√¥ng t√¨m th·∫•y s√°ch',\r\n                        variant: 'warning',\r\n                        solid: true\r\n                    });\r\n                }\r\n                \r\n                // Log detailed error information\r\n                if (err.response) {\r\n                    // Server responded with a status code outside of 2xx range\r\n                    console.error('Error response data:', err.response.data);\r\n                    console.error('Error response status:', err.response.status);\r\n                    console.error('Error response headers:', err.response.headers);\r\n                    \r\n                    const errorMessage = err.response.data.message || \r\n                        `L·ªói m√°y ch·ªß: ${err.response.status}`;\r\n                    \r\n                    this.$bvToast.toast(`Xo√° s√°ch th·∫•t b·∫°i: ${errorMessage}`, {\r\n                        title: 'L·ªói',\r\n                        variant: 'danger',\r\n                        solid: true\r\n                    });\r\n                } else if (err.request) {\r\n                    // Request was made but no response received\r\n                    console.error('Error request:', err.request);\r\n                    this.$bvToast.toast('Xo√° s√°ch th·∫•t b·∫°i: Kh√¥ng nh·∫≠n ƒë∆∞·ª£c ph·∫£n h·ªìi t·ª´ m√°y ch·ªß', {\r\n                        title: 'L·ªói k·∫øt n·ªëi',\r\n                        variant: 'danger',\r\n                        solid: true\r\n                    });\r\n                } else {\r\n                    // Something else happened while setting up the request\r\n                    console.error('Error message:', err.message);\r\n                    this.$bvToast.toast(`Xo√° s√°ch th·∫•t b·∫°i: ${err.message}`, {\r\n                        title: 'L·ªói',\r\n                        variant: 'danger',\r\n                        solid: true\r\n                    });\r\n                }\r\n                \r\n                // Check authentication status\r\n                if (err.response && err.response.status === 401) {\r\n                    console.warn('Authentication issue detected');\r\n                    const token = localStorage.getItem('token');\r\n                    console.log('Current token exists:', !!token);\r\n                    \r\n                    this.$bvToast.toast('Phi√™n ƒëƒÉng nh·∫≠p ƒë√£ h·∫øt h·∫°n, vui l√≤ng ƒëƒÉng nh·∫≠p l·∫°i', {\r\n                        title: 'L·ªói x√°c th·ª±c',\r\n                        variant: 'warning',\r\n                        solid: true\r\n                    });\r\n                }\r\n            }\r\n        }\r\n    }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.table-responsive {\r\n    overflow-x: auto;\r\n}\r\n</style>\r\n"]}]}